import pygame
import random

pygame.init()

# Set up display
screen_width=600
screen_height=600
screen=pygame.display.set_mode((screen_width, screen_height))

#def game variables
cell_size=20
direction =  1 #1=up, 2=right, 3=down, 4=left
update_snake = 0
food = [0,0]
new_food = True
new_piece= [0,0]
score = 0
game_over = False
clicked = False

#create snake
snake_pos=[[int(screen_width/2), int(screen_height/2)]]
snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size])
snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size*2])
snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size*3])

#define colors
bg =(242, 162, 194)
body_inner=(255, 255, 255)
body_outer=(0, 0, 0)
food_col = (0, 255, 0)
face = (255, 0, 0)
blue = (0, 0, 255)
pink = (255, 192, 203)

#setup rectangle for play again
again_rect = pygame.Rect((screen_width//2)-80, (screen_height//2), 160, 50)




def draw_screen():
    screen.fill(bg)

def draw_score():
    score_font = pygame.font.SysFont("comicsans", 30)
    score_txt = 'Score: ' + str(score)
    score_img = score_font.render(score_txt, True, blue)
    screen.blit(score_img, (10, 10))

def check_game_over(game_over):
   #check if snake has hit itself
    head_count = 0
    for x in snake_pos:
        if snake_pos[0] == x and head_count >0:
            game_over = True
        head_count += 1
    #check if snake has hit wall
    if snake_pos[0][0] < 0 or snake_pos[0][0] > screen_width or snake_pos[0][1] < 0 or snake_pos[0][1] > screen_height:
        game_over = True
    return game_over

def draw_game_over():
    over_font = pygame.font.SysFont("comicsans", 22)
    over_txt = 'GAME OVER :('
    over_img = over_font.render(over_txt, True, pink)
    pygame.draw.rect(screen, blue, (screen_width//2 - 80, screen_height//2 - 60, 160, 50))
    screen.blit(over_img, (screen_width//2 - 80, screen_height//2 - 50))
    
    again_text = 'Play Again? ;)'
    pygame.draw.rect(screen, blue, again_rect)
    again_img = over_font.render(again_text, True, pink)
    screen.blit(again_img, (screen_width//2 - 80, screen_height//2 + 10))

#main loop
run = True
while run:

    draw_screen()
    draw_score()
    pygame.time.delay(-2)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != 3:
                direction = 1
            if event.key == pygame.K_RIGHT and direction != 4:
                direction = 2
            if event.key == pygame.K_DOWN and direction != 1:
                direction = 3
            if event.key == pygame.K_LEFT and direction != 2:
                direction = 4   


    #create food
    if new_food == True:
        new_food = False
        food[0] = cell_size * random.randint(0, (screen_width // cell_size) -1) 
        food[1] = cell_size * random.randint(0, (screen_height // cell_size) -1) 

    #draw food
    pygame.draw.rect(screen, food_col, (food[0], food[1], cell_size, cell_size))

    #check if snake has eaten food
    if snake_pos[0] == food:
        new_food = True
        #add new piece to snake
        new_piece = list(snake_pos[-1])
        if direction == 1: #up
            new_piece[1] += cell_size
        if direction == 3: #down
            new_piece[1] -= cell_size
        if direction == 2: #right
            new_piece[0] -= cell_size  
        if direction == 4: #left
            new_piece[0] += cell_size
        
        #attach new piece to snake
        snake_pos.append(new_piece)

        #increase score
        score += 1



    if game_over == False:
        #update snake position
        if update_snake> 99:
            update_snake = 0
            #move snake
            snake_pos = snake_pos[-1:] + snake_pos[:-1]  # Remove last segment of the snake
                #heading up
            if direction == 1: #up
                snake_pos[0][0] = snake_pos[1][0]
                snake_pos[0][1] = snake_pos[1][1] - cell_size
            if direction == 3: #down
                snake_pos[0][0] = snake_pos[1][0]
                snake_pos[0][1] = snake_pos[1][1] + cell_size
            if direction == 2: #right
                snake_pos[0][1] = snake_pos[1][1]
                snake_pos[0][0] = snake_pos[1][0] + cell_size
            if direction == 4: #left
                snake_pos[0][1] = snake_pos[1][1]
                snake_pos[0][0] = snake_pos[1][0] - cell_size

        game_over = check_game_over(game_over)

    if game_over == True:
        draw_game_over()
        if event.type == pygame.MOUSEBUTTONDOWN and clicked == False:
            clicked = True
        if event.type == pygame.MOUSEBUTTONUP and clicked == True:
            clicked = False
            pos = pygame.mouse.get_pos()
            if again_rect.collidepoint(pos):
                #reset game variables
                direction = 1
                update_snake = 0
                food = [0,0]
                new_food = True
                new_piece= [0,0]
                score = 0
                game_over = False
                #create snake
                snake_pos=[[int(screen_width/2), int(screen_height/2)]]
                snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size])
                snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size*2])
                snake_pos.append([int(screen_width/2), int(screen_height/2)+cell_size*3])
            

    #draw snake
    head= 1
    for x in snake_pos:
        if head == 0:
            pygame.draw.rect(screen, body_outer, (x[0], x[1], cell_size, cell_size))
            pygame.draw.rect(screen, body_inner, (x[0]+1, x[1]+1, cell_size-2, cell_size-2))
        else:
            pygame.draw.rect(screen, body_outer, (x[0], x[1], cell_size, cell_size))
            pygame.draw.rect(screen, body_inner, (x[0]+1, x[1]+1, cell_size-2, cell_size-2))
            pygame.draw.circle(screen, face, (x[0]+4, x[1]+4), 2)
            pygame.draw.circle(screen, face, (x[0]+cell_size-4, x[1]+4), 2)
            head = 0
    pygame.display.update() 
      # Update the display
    update_snake += 1
